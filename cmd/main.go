package main

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/golang-migrate/migrate/v4"
	_ "github.com/golang-migrate/migrate/v4/database/mongodb"
	_ "github.com/golang-migrate/migrate/v4/source/file"
	"github.com/robfig/cron/v3"
	"log"
	"time"
	"tournament-bot/internal/bot"
	"tournament-bot/internal/db"
	"tournament-bot/internal/services"
	"tournament-bot/internal/web"
)

func main() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	db.InitDB()

	m, err := migrate.New("file://migrations", "mongodb://mongo:27017/tournament")
	if err != nil {
		log.Fatal(err)
	}
	err = m.Up()
	if err != nil && err != migrate.ErrNoChange {
		log.Fatal(err)
	}

	// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
	c := cron.New()

	// –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 6:00 AM –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
	_, err = c.AddFunc("0 6 * * *", deleteUnfinishedTournaments)
	if err != nil {
		log.Fatalf("Error adding deleteUnfinishedTournaments to cron: %v", err)
	}

	// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
	c.Start()

	// –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤
	go web.StartServer(":8081")

	go deleteUnfinishedTournaments()

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
	err = bot.SetWebhook("7012505888:AAEtQoe-AwaoNoC5OPUQaQ6jAqNHKYAKcQk", "https://tournament-bot.online/webhook")
	if err != nil {
		log.Fatalf("Error setting webhook: %v", err)
	}

	botAPI, err := tgbotapi.NewBotAPI("7012505888:AAEtQoe-AwaoNoC5OPUQaQ6jAqNHKYAKcQk")
	if err != nil {
		log.Fatal(err)
	}

	// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
	commands := []tgbotapi.BotCommand{
		{Command: "start", Description: "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"},
		{Command: "create_tournament", Description: "üèÜ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"},
		{Command: "delete_tournament", Description: "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"},
		{Command: "addadmin", Description: "üë§ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"},
		{Command: "tournament_info", Description: "‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –º–∞—Ç—á–∏"},
		{Command: "cancel", Description: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç—á–∞"},
		{Command: "start_playoff", Description: "üî• –ù–∞—á–∞—Ç—å —ç—Ç–∞–ø –ø–ª–µ–π-–æ—Ñ—Ñ —Ç—É—Ä–Ω–∏—Ä–∞"},
		{Command: "deletelastmatch", Description: "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞—Ç—á (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"},
		{Command: "add_match", Description: "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"},
	}

	_, err = botAPI.Request(tgbotapi.NewSetMyCommands(commands...))
	if err != nil {
		log.Printf("Error setting command menu: %v", err)
	}

	// –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
	select {}
}

func deleteUnfinishedTournaments() {
	// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤
	inactiveTournaments, err := services.GetInactiveTournaments()
	if err != nil {
		log.Printf("Error getting inactive tournaments: %v", err)
		return
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä
	for _, tournament := range inactiveTournaments {
		if (!tournament.SetupCompleted || !tournament.IsActive) && time.Since(tournament.CreatedAt) > 24*time.Hour {
			// –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—É—Ä–Ω–∏—Ä–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ —Ç—É—Ä–Ω–∏—Ä –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è, —É–¥–∞–ª—è–µ–º —Ç—É—Ä–Ω–∏—Ä
			err := services.DeleteTournament(tournament.ID)
			if err != nil {
				log.Printf("Error deleting tournament: %v", err)
			}
		}
	}
}
